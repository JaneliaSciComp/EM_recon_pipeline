#!/bin/bash

# ----------------------------------------------------------------------------
# Restore mongodb dump data from Google to Janelia's database.
# Archive dumps are expected to have been generated by running db-dump-google-archive.sh.
# Collection dumps are expected to have been generated by running db-dump-janelia-collections.sh.

set -e

if (( $# < 1 )); then
  echo "
Usage:    $0 <archive dump file> | <collection dump directory>

Examples: $0 render-ws-mongodb-8c-32gb-abc/20250216_213836.render.dump.gz
          $0 render-ws-mongodb-8c-32gb-abc/20250217_215500/render
"
  exit 1
fi

DUMP_FILE_OR_DIR="${1}"

if [ -f "${DUMP_FILE_OR_DIR}" ]; then
  DUMP_TYPE="archive"
elif [ -d "${DUMP_FILE_OR_DIR}" ]; then
  DUMP_TYPE="collection"
else
  echo "ERROR: ${DUMP_FILE_OR_DIR} not found"
  exit 1
fi

read -rsp "Enter password for MongoDB root account: " MONGO_PWD
echo

# see https://www.mongodb.com/docs/database-tools/mongorestore/
MONGORESTORE="/groups/hess/hesslab/render/mongodb/mongodb-database-tools-rhel93-x86_64-100.10.0/bin/mongorestore"

CONNECTION_URI="mongodb://root:${MONGO_PWD}@render-mongodb4:27017,render-mongodb5:27017,render-mongodb6:27017/${DB}?authSource=admin&replicaSet=rsRender"

if [ "${DUMP_TYPE}" == "archive" ]; then
  echo "restoring ${DUMP_FILE_OR_DIR} ..."
  ${MONGORESTORE} --uri="${CONNECTION_URI}" --archive="${DUMP_FILE_OR_DIR}" --gzip
else
  for DUMP_FILE in "${DUMP_FILE_OR_DIR}"/*.bson.gz; do
    echo "restoring ${DUMP_FILE} ..."
    ${MONGORESTORE} --uri="${CONNECTION_URI}" --gzip "${DUMP_FILE}"
  done
fi
