// copied from Konrad's nf-demos, but needed to disable timeline, report, trace, dag (see below)
// https://github.com/JaneliaSciComp/nf-demos/blob/main/nextflow.config

workDir = "work"

params {
    runtime_opts = ""
    lsf_opts = ""
    tracedir = "${workDir}/trace"
}

// TODO: to enable these, need to fix Command 'ps' required by nextflow to collect task metrics cannot be found

timeline {
  enabled = false
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = false
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = false
  file = "${params.tracedir}/execution_trace.txt"
}
dag {
  enabled = false
  file = "${params.tracedir}/pipeline_dag.svg"
}

manifest {
    defaultBranch = "main"
    name = 'EM_recon_pipeline'
    author = '@trautmane'
    homePage = 'https://github.com/JaneliaSciComp/EM_recon_pipeline'
    description = 'Pipeline scripts and tools for reconstructing Electron Microscopy volumes.'
    mainScript = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version = '0.1.0'
}

process {
    withLabel: jvm_small_single {
        cpus = 1
        memory = 1.GB
    }
    withLabel: jvm_medium_single {
        cpus = 1
        memory = 6.GB
    }
    withLabel: jvm_large_single {
        cpus = 1
        memory = 14.GB
    }
}

profiles {

    debug {
        process.beforeScript = 'echo $HOSTNAME'
    }

    standard {
        docker.enabled = false
        singularity.enabled = true
    }

    localdocker {
        docker.enabled = true
        singularity.enabled = false
    }

    aws {
        docker.enabled = true
        singularity.enabled = false
        aws {
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }
        process {
            executor = 'awsbatch'
            queue = 'janelia-nextflow-tower-connect'
        }
    }

    tower {
        docker.enabled = true
        singularity.enabled = false
        aws {
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }
    }

    lsf {
        process {
            executor = 'lsf'
            clusterOptions = params.lsf_opts
        }
        docker.enabled = false
        singularity.enabled = true
    }
}

// TODO: can executor queueSize be mapped to process labels or is it one value for all?
//   I'm thinking queueSize is like the array job task threshold, maybe I'm wrong ...

executor {
    queueSize = 1000
    pollInterval = "2 sec"
    //queueStatInterval = "6 sec"
}

docker {
    temp = "auto"
    runOptions = "${params.runtime_opts}"
}

singularity {
    autoMounts = true
    cacheDir = "$HOME/.singularity_cache"
    runOptions = "${params.runtime_opts}"
}
